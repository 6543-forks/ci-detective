trigger:
- master

pr:
- master

pool:
  vmImage: 'vs2017-win2016'

variables:
- group: ci-detective
- name: environment
  value: Windows

steps:
- task: GoTool@0
  displayName: 'Use Go 1.12'
  inputs:
    version: 1.12

- powershell: |
   $env:GOBIN = "$(go env GOPATH)\bin"
   $env:PATH += ";$($env:GOBIN);"
   #  $url = https://github.com/go-task/task/releases/download/v2.7.0/task_windows_amd64.zip
   (Invoke-WebRequest https://github.com/go-task/task/releases/download/v2.7.0/task_windows_amd64.zip).Content | Expand-Archive -DestinationPath "$env:GOBIN"
   # go run ./scripts/dev_setup.go
   task setup
  displayName: 'Install dependencies'

- powershell: |
   $env:GOBIN = "$(go env GOPATH)\bin"
   $env:PATH += ";$($env:GOBIN);"
   task coverage
  displayName: 'Run tests'

- task: PublishTestResults@2
  displayName: 'Publish unit test results'
  inputs:
    testResultsFiles: '$(junitXmlResultsFileName)'
    searchFolder: '$(testResultsDirPath)'
    testRunTitle: '$(prTestResultsTitle)'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(fullCoberturaResultsFilePath)'
    reportDirectory: '$(covResultsDirPath)'
  condition: succeededOrFailed()

- task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@6
  displayName: 'Check build quality'
  inputs:
    checkCoverage: true
    coverageFailOption: fixed
    coverageType: lines
    coverageThreshold: 100
    baseDefinitionId: 31
